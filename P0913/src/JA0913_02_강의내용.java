
public class JA0913_02_강의내용 {

	public static void main(String[] args) {

		// 상속: 클래스를 재사용 extends object
		// 오버라이딩: 상속에서 메소드명이 같은 것 
		// 메소드: 클래스메소드 인스턴스메소드
		// 패키지: 폴더  임포트: 원래 클래스의 패키지의 이름,위치값을 생략해줌
		// static : 공용의 공통의 클래스변수&메소드변수
		// final: 상수(변경X) 확장될수없는클래스 변경될수없는메소드 멤버변수 지역변수
		// abstract: 추상클래스 추상매소드에 사용됨 
		// private: 같은클래스 내에서만 접근이 가능
		// default:  같은클래스,패키지내에서만 접근이 가능
		// public: 접근제한이 없다 
		// protected: 같은 클래스,패키지, 다른패키지의 자손클래스에서 접근이 가능하다
		// 생성자: 클래스이름과 같다 리턴값이 같다 보이드붙여야함
		// 인스턴스변수: 객체선언 후 참조변수.인스턴스변수명
		// 클래스변수: 객체선언 없이 클래스명.클래스변수명
		// 지역변수: 메소드 블럭을 벗어나면 소멸 메소드 내에서 선언되며 종료와 함께 소멸
		// static이 있으면 클래스변수 객체선언없이 클래스명.변수명
		// static이 없으면 인스턴스변수 객체선언 후 참조변수명.변수명
		// 메소드는 소괄호에 중괄호가 시작되면 메소드(for반복문예외)
		// static이 있으면 클래스메소드(static) 객체선언없이 클래스명.메소드명
		// static이 없으면 인스턴스메소드 객체선언 후 참조변수명.메소드명
		// super:조상의 변수를 가리킴 super(): 조상의 생성자를 가리킴
		//  this : 인스턴스변수가리킴 this():다른생성자호출
		// 다형성: 조상타입의 참조변수로 자손타입의 객체를 다룰 수 있다
		// 조상타입의 참조변수로 자손타입의 인스턴스를 참조할 수 있지만 반대로 자손타입의 참조변수로
		// 조상타입의 인스턴스를 참조할 수 없다!!
	
	
	
	
	
	
	
	
	
	}
	
	
	
	
	

}
